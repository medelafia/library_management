name : Deploy Library Api 
on:
  push: 
    branches: [main] 
jobs: 
  build: 
    runs-on: ubuntu-latest 
    steps :  
      - name: Setup repo 
        uses: actions/checkout@v4
      - name: Install mvn
        run: | 
          sudo apt-get update
          sudo apt-get install maven -y
          
      - name: build target 
        run: mvn clean package
      
      - name: install aws 
        run: |  
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt install unzip 
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name : install docker
        run : | 
           curl -fsSL https://get.docker.com -o get-docker.sh
           sh get-docker.sh
      - name: authenticate with ecr
        id : login-ecr
        uses :  aws-actions/amazon-ecr-login@v2
        
      - name : build image
        run: | 
          docker build -t library_management:latest . 
          docker tag library_management:latest ${{secrets.DOCKER_REGISTRY}}/library_management:latest
          docker push ${{secrets.DOCKER_REGISTRY}}/library_management:latest
  deploy : 
    runs-on : ubuntu-latest 
    needs : build
    steps: 
      - name: connect with instance
        uses : appleboy/ssh-action@v1
        with : 
          host : ${{secrets.HOST}} 
          username : ${{secrets.USERNAME}} 
          key : ${{secrets.KEY}} 
          script : | 
            echo "Authenticating now" 
            aws erc get-login-password --region ${{secrets.AWS_REGION}} | \ 
            docker login --username AWS --password-stdin ${{secrets.DOCKER_REGISTRY}}
            echo "Auth success"
            echo "pulling" 
            docker pull ${{secrets.DOCKER_REGISTRY}}/library_management:latest
            echo "pulled" 
            docker stop library_container || true
            docker rm library_container || true 
            docker run -p 8080:8080 -d --env-file .env --name library_container ${{secrets.DOCKER_REGISTRY}}/library_management:latest
              
    
